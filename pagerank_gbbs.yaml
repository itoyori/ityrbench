depends:
  - name: gbbs
    recipe: dataset

default_params:
  nodes: 1
  cores:
    - value: 48
      machines: [wisteria-o]
    - value: 76
      machines: [squid-c]
    - value: 6
      machines: [local]
  repeats: 11
  max_iters: 100
  dataset: rmat_20_24
  serial: 0
  debugger: 0

default_name: pagerank_gbbs
default_queue: node_${nodes}
default_duplicates: 1

build:
  depend_params: [serial]
  script: |
    source build_common.bash

    CXXFLAGS="${CXXFLAGS:+$CXXFLAGS} -O3 -DNDEBUG -g -std=c++17 -DGBBSLONG -DAMORTIZEDPD -DUSEMALLOC"

    if [[ $KOCHI_PARAM_SERIAL == 1 ]]; then
      export SERIAL=1
    fi

    make clean -C gbbs/benchmarks/PageRank
    CXX=FCC CFLAGS="$CXXFLAGS" make -j -C gbbs/benchmarks/PageRank

run:
  depend_params: [nodes, cores, repeats, max_iters, dataset, serial, debugger]
  script: |
    source run_common.bash

    commands="
      ./gbbs/benchmarks/PageRank/PageRank -b
        -rounds $KOCHI_PARAM_REPEATS
        -iters $KOCHI_PARAM_MAX_ITERS
        ${KOCHI_INSTALL_PREFIX_GBBS}/${KOCHI_PARAM_DATASET}.bin"

    n_nodes=$(echo $KOCHI_PARAM_NODES | cut -f 1 -d ":" | sed 's/x/*/g' | bc)

    if [[ $n_nodes != 1 ]]; then
      echo "The number of nodes must be 1."
      exit 1
    fi

    export PARLAY_NUM_THREADS=$KOCHI_PARAM_CORES

    if [[ $KOCHI_PARAM_SERIAL == 1 || $KOCHI_PARAM_CORES == 1 ]]; then
      numactl_cmd=""
    else
      numactl_cmd="numactl -iall"
    fi

    if [[ $KOCHI_PARAM_DEBUGGER == 0 ]]; then
      $numactl_cmd $commands
    else
      gdb --args $commands
    fi
