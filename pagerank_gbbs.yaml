depends:
  - name: gbbs
    recipe: dataset

default_params:
  nodes: 1
  cores:
    - value: 48
      machines: [wisteria-o]
    - value: 76
      machines: [squid-c]
    - value: 6
      machines: [local]
  repeats: 11
  max_iters: 3
  dataset: rmat_20_24
  compressed: 1
  serial: 0
  debugger: 0

default_name: pagerank_gbbs
default_queue: node_${nodes}
default_duplicates: 1

batches:
  serial:
    name: pagerank_gbbs_${batch_name}
    queue: serial
    params:
      nodes: 1
      cores: 1
      serial: 1
      dataset: [rmat_26_30, twitter2010]
    artifacts:
      - type: stdout
        dest: pagerank_gbbs/${batch_name}/${dataset}_${duplicate}.log
      - type: stats
        dest: pagerank_gbbs/${batch_name}/${dataset}_${duplicate}.stats
      - type: file
        src: mpirun_out.txt
        dest: pagerank_gbbs/${batch_name}/${dataset}_${duplicate}.out

  normal:
    name: pagerank_gbbs_${batch_name}
    params:
      nodes: 1
      dataset: [rmat_26_30, twitter2010]
    artifacts:
      - type: stdout
        dest: pagerank_gbbs/${batch_name}/${dataset}_${duplicate}.log
      - type: stats
        dest: pagerank_gbbs/${batch_name}/${dataset}_${duplicate}.stats
      - type: file
        src: mpirun_out.txt
        dest: pagerank_gbbs/${batch_name}/${dataset}_${duplicate}.out

build:
  depend_params: [serial]
  script: |
    source build_common.bash

    CXXFLAGS="${CXXFLAGS:+$CXXFLAGS} -O3 -DNDEBUG -g -std=c++17 -DGBBSLONG -DAMORTIZEDPD -DUSEMALLOC"

    if [[ $KOCHI_PARAM_SERIAL == 1 ]]; then
      export SERIAL=1
    fi

    make clean -C gbbs/benchmarks/PageRank
    CXX=${CXX:-g++} CFLAGS="$CXXFLAGS" make -j -C gbbs/benchmarks/PageRank

run:
  depend_params: [nodes, cores, repeats, max_iters, dataset, compressed, serial, debugger]
  script: |
    source run_common.bash

    if [[ $KOCHI_PARAM_COMPRESSED == 1 ]]; then
      dataset_opts=-c
      dataset_file=${KOCHI_INSTALL_PREFIX_GBBS}/${KOCHI_PARAM_DATASET}.bytepda
    else
      dataset_opts=-b
      dataset_file=${KOCHI_INSTALL_PREFIX_GBBS}/${KOCHI_PARAM_DATASET}.bin
    fi

    commands="
      ./gbbs/benchmarks/PageRank/PageRank $dataset_opts
        -rounds $KOCHI_PARAM_REPEATS
        -iters $KOCHI_PARAM_MAX_ITERS
        $dataset_file"

    n_nodes=$(echo $KOCHI_PARAM_NODES | cut -f 1 -d ":" | sed 's/x/*/g' | bc)
    if [[ $n_nodes != 1 ]]; then
      echo "The number of nodes must be 1."
      exit 1
    fi

    export PARLAY_NUM_THREADS=$KOCHI_PARAM_CORES

    if [[ $KOCHI_PARAM_SERIAL == 1 || $KOCHI_PARAM_CORES == 1 ]]; then
      numactl_cmd=""
    else
      numactl_cmd="numactl -iall"
    fi

    if [[ $KOCHI_PARAM_DEBUGGER == 0 ]]; then
      $numactl_cmd $commands 2>&1 | tee $STDOUT_FILE
    else
      gdb --args $commands
    fi
