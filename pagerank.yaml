depends:
  - name: itoyori
    recipe: release
  - name: gbbs
    recipe: dataset

default_params:
  nodes: 1
  cores:
    - value: 48
      machines: [wisteria-o]
    - value: 76
      machines: [squid-c]
    - value: 6
      machines: [local]
  real_type: double
  repeats: 11
  max_iters: 100
  dataset: rmat_20_24
  cutoff_v: 4096
  cutoff_e: 4096
  exec_type: gpop # naive/gpop
  bin_width: 16384
  # common params
  serial: 0
  sched: randws # randws/adws
  cache_policy: writeback_lazy # nocache/writethrough/writeback/writeback_lazy/getput
  dist_policy: default # default/block/cyclic/block_adws
  cache_size: 128 # MB
  block_size: 65536 # bytes
  sub_block_size: 4096 # bytes
  max_dirty: $cache_size # MB
  noncoll_alloc_size: 128 # MB
  shared_mem: 1
  prof: disabled # disabled/stats/trace
  dag_prof: disabled # disabled/workspan
  cache_prof: disabled # disabled/stats
  debugger: 0

default_name: pagerank
default_queue: node_${nodes}
default_duplicates: 1

build:
  depend_params: [real_type, dist_policy, block_size, prof, dag_prof, cache_prof]
  script: |
    source build_common.bash

    CXXFLAGS="${CXXFLAGS:+$CXXFLAGS} -DITYRBENCH_REAL_TYPE=$KOCHI_PARAM_REAL_TYPE"
    CXXFLAGS="${CXXFLAGS:+$CXXFLAGS} -DITYR_ALLOCATOR_USE_DYNAMIC_WIN=false"

    CC=$MPICC CXX=$MPICXX cmake -DCMAKE_CXX_FLAGS="$CXXFLAGS" $CMAKE_OPTIONS .
    make clean
    make -j pagerank

run:
  depend_params: [nodes, cores, repeats, max_iters, dataset, cutoff_v, cutoff_e, exec_type, bin_width, serial, sched, cache_policy, cache_size, sub_block_size, max_dirty, noncoll_alloc_size, shared_mem, prof, debugger]
  script: |
    source run_common.bash

    if [[ $KOCHI_PARAM_SERIAL == 1 ]]; then
      config_name=serial
    else
      config_name=${KOCHI_PARAM_SCHED}_${KOCHI_PARAM_CACHE_POLICY}
    fi

    case $KOCHI_PARAM_EXEC_TYPE in
      naive) exec_type_num=0 ;;
      gpop)  exec_type_num=1 ;;
      *)     echo "Unknown exec type"; exit 1 ;;
    esac

    commands="
      ./pagerank_${config_name}.out
        -r $KOCHI_PARAM_REPEATS
        -i $KOCHI_PARAM_MAX_ITERS
        -f ${KOCHI_INSTALL_PREFIX_GBBS}/${KOCHI_PARAM_DATASET}.bin
        -v $KOCHI_PARAM_CUTOFF_V
        -e $KOCHI_PARAM_CUTOFF_E
        -t $exec_type_num
        -b $KOCHI_PARAM_BIN_WIDTH"

    n_nodes=$(echo $KOCHI_PARAM_NODES | cut -f 1 -d ":" | sed 's/x/*/g' | bc)

    if [[ $KOCHI_PARAM_DEBUGGER == 0 ]]; then
      ityr_mpirun $((n_nodes * KOCHI_PARAM_CORES)) $KOCHI_PARAM_CORES core $commands
    else
      MPIEXEC=mpitx ityr_mpirun $((n_nodes * KOCHI_PARAM_CORES)) $KOCHI_PARAM_CORES core gdb --args $commands
    fi

    if [[ $KOCHI_PARAM_PROF == trace ]]; then run_trace_viewer; fi
