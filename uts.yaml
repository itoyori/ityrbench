depends:
  - name: itoyori
    recipe: release

default_params:
  nodes: 1
  cores:
    - value: 48
      machines: [wisteria-o]
    - value: 76
      machines: [squid-c]
    - value: 6
      machines: [local]
  tree: T1L # T1L/T1XL/T1XXL/T1WL
  repeats: 11
  exec_type: parallel # serial/parallel
  # common params
  serial: 0
  sched: randws # randws/adws
  cache_policy: writeback_lazy # nocache/writethrough/writeback/writeback_lazy/getput
  dist_policy: default # default/block/cyclic/block_adws
  cache_size: 128 # MB
  block_size: 65536 # bytes
  sub_block_size: 4096 # bytes
  max_dirty: $cache_size # MB
  noncoll_alloc_size: 1 # MB
  shared_mem: 1
  prof: disabled # disabled/stats/trace
  dag_prof: disabled # disabled/workspan
  debugger: 0

default_name: uts

build:
  depend_params: [exec_type, dist_policy, block_size, prof, dag_prof]
  script: |
    source build_common.bash

    case $KOCHI_PARAM_EXEC_TYPE in
      serial)   CXXFLAGS="${CXXFLAGS:+$CXXFLAGS} -DUTS_RUN_SEQ=1 -DUTS_RECURSIVE_FOR=1" ;;
      parallel) ;;
      *)        echo "Unknown exec type ($KOCHI_PARAM_EXEC_TYPE)"; exit 1 ;;
    esac

    CC=$MPICC CXX=$MPICXX cmake -DCMAKE_CXX_FLAGS="$CXXFLAGS" $CMAKE_OPTIONS .
    make clean
    make -j uts

run:
  depend_params: [nodes, cores, tree, repeats, serial, sched, cache_policy, cache_size, sub_block_size, max_dirty, noncoll_alloc_size, shared_mem, prof, debugger]
  script: |
    source run_common.bash

    source uts/sample_trees.sh

    if [[ $KOCHI_PARAM_SERIAL == 1 ]]; then
      config_name=serial
    else
      config_name=${KOCHI_PARAM_SCHED}_${KOCHI_PARAM_CACHE_POLICY}
    fi

    commands="
      ./uts_${config_name}.out
        ${!KOCHI_PARAM_TREE}
        -i $KOCHI_PARAM_REPEATS"

    n_nodes=$(echo $KOCHI_PARAM_NODES | cut -f 1 -d ":" | sed 's/x/*/g' | bc)

    if [[ $KOCHI_PARAM_DEBUGGER == 0 ]]; then
      ityr_mpirun $((n_nodes * KOCHI_PARAM_CORES)) $KOCHI_PARAM_CORES $commands
    else
      MPIEXEC=mpitx ityr_mpirun $((n_nodes * KOCHI_PARAM_CORES)) $KOCHI_PARAM_CORES gdb --args $commands
    fi

    if [[ $KOCHI_PARAM_PROF == trace ]]; then run_trace_viewer; fi
